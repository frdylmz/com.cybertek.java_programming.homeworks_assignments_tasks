@Author>>>  SHAHIN GADIMOV
			BATCH 10
			SDET - 2018 FALL

			
day13_PracticeQuestions

Q:	Which of the following are true? (Choose all that apply)
	4:	short numPets = 5;
	5:	int numGrains = 5.6;		compiler error: int doesn't have a floating point
	6:	String name = "Scruffy";
	7:	numPets.length();			compiler error: short (primitive) doesn't have methods
	8:	numGrains.length();			compiler error: int (primitive) doesn't have methods
	9:	name.length					compiler error: String method syntax is .length()
										this example at line 9 is missing ()


Q:	Which of the following are valid Java identifiers? (Choose all that apply)
	A. A$B 			(valid, _ and $ are permitted)
	B. _helloWorld 	(valid, even though starting naming with _ or $ is highly discouraged)
	C. tru 			(INVALID, this is a reserved keyword)
	D. java.lang 	(INVALID, . is not allowed)
	E. Public 		(valid, even though highly discouraged due to public being a common keyword)
	F. 1980_s 		(INVALID, even though numbers are permitted, names cannot start with one)

Q:	Which of the following Java operators can be used with boolean variables?
	A. ==		(valid, checks equality)
	B. +		(INVALID)
	C. --		(INVALID)
	D. !		(valid, stands for 'not', usually checks inequality)
	E. %		(INVALID)
	F. <=		(valid, compares primitive values and returns a boolean variable)

Q:	Which change would allow the following code snippet to compile?
	3:	long x = 10;
	4:	int y = 2 * x;

	A:	From the given answer options, the following will allow the code to compile:
		B. Cast x on line 4 to int >>> int y = 2 * (int)x;
		D. Cast 2 * x on line 4 to int >>> int y = (int) (2 * x);
		F. Change the data type of y on line 4 to long >>> long y = 2 * x;

		Another solution, that is not given as an option is:
		Change the data type of x on line 3 to int >>> int x = 10;

Q:	What is the output of the following code snippet?
	3:	int x = 4;
	4:	long y = x * 4 - x++;
	5:	if (y < 10) System.out.println("Too Low");
	6:	else System.out.println("Just right");
	7:	else System.out.println("Too High");	// COMPILATION FAILS HERE

	A:	The compilation fails at line 7 since the ELSE statement doesn't have related IF statement
		However, the code can compile if either of the following changes made:
			* create an ELSE IF condition on line 6 instead of ELSE
			* add another IF condition before line 7

Q:	What is the output of the following code?
	1:	public class TernaryTester {
	2:		public static void main(String[] args) {
	3:			int x = 5;
	4:			System.out.println(x > 2 ? x < 4 ? 10 : 8 : 7);
	5:	}	}

	A: 	The ternary operation can be made easier to read by rewriting it as follows:
			(x > 2) ? ((x < 4) ? 10 : 8) : 7;
		Check if x is greater than 2: 
			if yes, go to the inner ternary;
			else, return 7.
		If within the inner ternary, check if x is less than 4
			if yes, return 10;
			else return 8.
		Since x is 5, and 5 is greater than 2, this code will go into inner ternary and return 8.

Q:	What is the output of the following code?
	1:	public class ArithmeticSample {
	2:		public static void main(String[] args) {
	3:			int x = 5 * 4 % 3;
	4:			System.out.println(x);
	5:	}	}

	A:	Both * and % have equal priority within arithmetic operations, therefore
		this operation will run from left to right.
		First, we multiply 5 * 4 which returns 20.
		Then we calculate 20 % 3 which returns 2. 
		We get 2 printed on the console.

Q:	What is the output of the following code snippet?
	3:	int x1 = 50, x2 = 75;
	4:	boolean b = x1 >= x2;
	5:	if (b = true) System.out.println("Success"); // COMPILE ERROR
	6:	else System.out.println("Failure");

	A:	The code will fail to compile at LINE 5
		= is an assignment operator, this means there is no condition to 
		check within the if statement
		== should have been used in this case
		Should the code have compiled, the result would've been "Success"

Q:	What is the result of the following code snippet?
	3:	final char a = 'A', d = 'D';
	4:	char grade = 'B';
	5:	switch(grade) {
	6:		case a:
	7:		case 'B': System.out.print("great");
	8:		case 'C': System.out.print("good"); break;
	9:		case d:
	10:		case 'F': System.out.print("not good");
	11:	}

	A:	The code will compile.
		The switch statement will go to case 'B' because grade = 'B'
		It will first print "great" and then continue to case 'C' and 
			print 'C' as well because there is no break statement. Then
			it will break out of the switch at the end of line 8.
		Thus, greatgood will be printed to the console

Q:	Which of the following variable types is not permitted in a switch statement?
	A. String 	
	B. double	NOT ALLOWED (also, long and float are not permitted)
	C. int 		
	D. char 	

Q:	What is the value of tip after executing the following code snippet?
	int meal = 5;
	int tip = 2;
	int total = meal + (meal > 6 ? ++tip : --tip);

	A:	The outcome will be 1.
		Since () have higher priority in arithmetic calculations, when 
			calculating total, we will need to solve for the () first.
			In this case, the () has ternary in it. It checks if mean
			is > than 6. Since it is not, it will return the second side
			of : which is --tip (here, tip is reduced by 1, before 
			being returned, meaning, the tip will become 1).
			The total will come up to 6.

Q:	What is the output of the following application?
	package planning;
	public class ThePlan {
		public static void main(String[] args) {
			int plan = 1;
			plan = plan++ + --plan;
			if(plan == 1) {
				System.out.print("Plan A");
			}else { if(plan==2) System.out.print("Plan B");
			else  System.out.print("Plan C"); 
			}
		}
	}
	A:	The original code has some errors in regards to the usage of { }
		If the code is kept as is, it will not compile. However, should
		I edit the curly braces in a fashion to have the code compile,
		the outcome will be Plan B.

Q:	Which of the following statements about a default branch in a switch
	statement is correct?
	A. All switch statements must include a default statement
		// default is optional
	B. The default statement is required to be placed after all case statements
		// not necessarily, even though it is a common practice
	
	C. Unlike a case statement, the default statement does not take a value
		/*	CORRECT ANSWER 	*/

	D. A default statement can only be used when at least one case statement is present
		// default statement can be on its own, without any case statements as well
		// even though I can't imagine the use of this, but it is permitted

Q:	What is the value of thatNumber after the execution of the following code?
	long thatNumber = 5 >= 5 ? 1+2 : 1*1;
	if(++thatNumber < 4)
		thatNumber += 1;

	A:	The outcome is 4. This is how we got there
		First, we are assigning the value to thatNumber by a ternary.
			Ternary asks if 5 >= 5 which returns true, taking us to the left
			side of : which is 1+2 >> 3
		Then, within the if statement, we are pre-incrementing thatNumber 
			and asking whether it is (which is now 4) is < 4, which returns 
			false, hence, leaving the value of thatNumber at 4.
		The next line is just a part of the if statement (no need for {})

Q:	What is the output of the following application?
	package dinosaur;
	public class Park {
		public final static void main(String... arguments) {
			int pterodactyl = 6;
			long triceratops = 3;
			if (pterodactyl % 3 >= 1) 
				triceratops++;
				triceratops--;
			System.out.print(triceratops);
		}
	}

	A:	The code will compile (final and String varargs are acceptable)
		The output is going to be 2.
		We are instantiating triceratops as (int) 3 which is casted to long.
		Then, the if statement returns false, which automatically skips over
		triceratops++ (which is the body of the if statement). Therefore, 
		the code is taken to triceratops--, which in its turn decreases the 
		triceratops from 3 to 2, having 2 printed on the console